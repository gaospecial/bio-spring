<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on Hugo Prose</title>
    <link>/tags/github/</link>
    <description>Recent content in github on Hugo Prose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 和 GitHub 使用指北</title>
      <link>/post/2019/09/29/git-github-tutorial/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/09/29/git-github-tutorial/</guid>
      <description>今天小丫画图群里在讨论 GitHub 的使用。大家都说GitHub的使用挺简单的，我觉得也是。但是，要找一个比较系统的介绍的话，我还真没找到。所以，说说自己的使用经历吧。这些都是干货。
我对 GitHub 的使用时间不长，但是觉得真是个好东西。总的来说，特别适合于存放文本文件，例如代码，markdown写成的文档，rmarkdown写成的书等。
GitHub其实是支持Git版本控制软件的公共仓库，类似的网站其实不止一个，但是GitHub是最流行的一个。
所以，要想使用GitHub，你必须做的只有两件事：一、安装一个Git客户端点击下载。二、在GitHub注册一个账号点击注册。这两步操作按住不提。
使用 Git 在Windows下面，安装完Git客户端之后，鼠标右键菜单中会多出来两个命令：“Git GUI here”和“Git Bash here”。前者打开一个图形界面，后者打开一个终端。使用这两个传送门便可以进入Git的世界。
如果当前的目录是一个Git目录，则自动会被Git识别出来。否则，你可以选择“新建一个”或者“克隆”一个。
Git 常用操作 Git常用的命令有下面几个：
git init sample 在当前目录新建一个“sample”目录，在目录中启用Git版本控制系统。
git clone https://github.com/GuangchuangYu/course_bioinfo_training.git 从GitHub克隆一个软件源到当前目录。这将在当前目录新建一个“course_bioinfo_training”文件夹，其中包含所有文件和版本历史。
git status 显示当前Git仓库的状态。如果有修改，新建，删除等操作，将会自动列举出来。
git add newfile.R newfile.R 是一个新建的文件，其中我写了一些代码。要使用Git纪录版本历史，必须将其添加进来。
git commit 或者 git commit -a 这个命令将生成一次操作，系统会打开默认的文本编辑器，让你写一下操作的主要内容。
GitHub 的使用 GitHub 事实上提供了一个远程 Git 仓库。这个远程仓库与本地仓库是关联在一起的，但有相互独立。在上面，我们已经使用过了 git pull 命令，这个命令就是从远程向本地输送。与之对应，git push 是本地向远程服务器传输，将本地的修改记录在服务器中。
在 push 的过程中，需要验证身份，因此，我们需要配置认证信息。
GitHub 配置 SSH 密钥 SSH 密钥是成对的，包括公钥和私钥，公钥登记到 GitHub 网站，私钥存储在本地计算机（私有）。
密钥在本地生成。点击鼠标右键，选择“Git Bash here”，输入下列命令将生成一对SSH密钥。 默认情况下，私钥保存在 “~/.ssh/id_rsa” 文件中，公钥保存在 “~/.</description>
    </item>
    
  </channel>
</rss>
