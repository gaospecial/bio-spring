<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>云计算 CLOUD&#43; on Hugo Prose</title>
    <link>/tags/%E4%BA%91%E8%AE%A1%E7%AE%97-cloud&#43;/</link>
    <description>Recent content in 云计算 CLOUD&#43; on Hugo Prose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E4%BA%91%E8%AE%A1%E7%AE%97-cloud+/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>三分钟在阿里云中用上免费SSL</title>
      <link>/post/2018/10/23/2018-10-23-setup-ssl-in-aliyun/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/10/23/2018-10-23-setup-ssl-in-aliyun/</guid>
      <description> 给自己的网站添加SSL证书其实并不复杂，但是关键一点就是首先要拥有一个SSL证书。由于SSL证书价格不菲，很多个人站长会选择放弃使用Https。但是，自从开源、免费的Let’s Encrypt证书出现后，我觉得SSL也是我们草根站长可以玩的了。 https://blog.csdn.net/ithomer/article/details/78075006
根据 https://certbot.eff.org/lets-encrypt/ubuntubionic-apache 官方教程指引，可以很快在阿里云的服务器中用上Let’s Encrypt的证书，全程只需三分钟。
安装软件 $ sudo apt-get update $ sudo apt-get install software-properties-common $ sudo add-apt-repository ppa:certbot/certbot $ sudo apt-get update $ sudo apt-get install python-certbot-apache 获取证书 运行下述命令将启动一个向导，自动为你获取证书，并更新APACHE网站配置启用证书。
$ sudo certbot --apache 更新证书 从Let’s Encrypt申请的证书有效期很短，只有90天。因此需要每隔一段时间续订一下。运行下列命令将模拟更新证书。
$ sudo certbot renew --dry-run 添加 cron 来自动化。
# crontab -e 在 crontab 中添加下列两行，将会每隔90天自动运行续订任务。
# renew Let&#39;s Encrypt SSL cert every 90 days 0 0 */90 * * certbot renew </description>
    </item>
    
    <item>
      <title>在阿里云ECS上设置swap分区</title>
      <link>/post/2017/10/10/2017-10-10-enable-swap-in-aliyun-ecs/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/10/10/2017-10-10-enable-swap-in-aliyun-ecs/</guid>
      <description>对于内存比较小的ECS来说，开启swap可以避免偶尔的内存溢出。
#查看内存和虚拟分区情况 free -h #创建虚拟分区(1GB) dd if=/dev/zero of=/mnt/swap bs=1M count=1000 mkswap /mnt/swap #启用swap swapon /mnt/swap echo 10 &amp;gt; /proc/sys/vm/swappiness #查看swap free -h #写入配置 echo -e &amp;quot;\n/mnt/swap swap swap defaults 0 0\n&amp;quot; &amp;gt;&amp;gt; /etc/fstab vi /etc/sysctl.conf # 将其中的对应行的数值从0更改为10,10%剩余内存时使用swap # vm.swapiness=10 以上的代码将创建1000M的swap分区（bs × count），即时启用。在剩余10% （swapiness）物理内存时将会使用swap。
同时，将配置写入系统文件。重启之后仍然会使用上述配置。</description>
    </item>
    
    <item>
      <title>cloudfs无法上传的故障排除</title>
      <link>/post/2015/09/27/2015-09-27-cloudfs-upload-failed/</link>
      <pubDate>Sun, 27 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/09/27/2015-09-27-cloudfs-upload-failed/</guid>
      <description>之前设置WordPress使用阿里云OSS存储图片，今天出问题了。设置方法在这里
错误提示：cannot access oss: Transport endpoint is not connected
解决方案如下：
去除挂载 重启Cloudfs服务 设置权限 [cc lang=”bash”]
umount /mnt/oss
service cloudfs restart
chmod 666 /mnt/oss
[/cc]</description>
    </item>
    
    <item>
      <title>整合 OSS 开放存储到 WordPress 系统</title>
      <link>/post/2015/08/23/2015-08-23-cloudfs-wp-uploads/</link>
      <pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/08/23/2015-08-23-cloudfs-wp-uploads/</guid>
      <description>使用 OSS 存储 WordPress 相当于将 云服务器 的存储免费扩大了。
安装cloudfs -在云市场搜索cloudfs，获取下载链接。
-将下载的安装包上传至云服务器。
-安装依赖包。
-以默认设置安装。
[cc lang=”bash”]
# Install dependence
apt-get install libcurl4-openssl-dev libssl-dev pkg-config libxml2 libxml2-dev libfuse-dev libunwind8-dev
[/cc]
配置cloudfs [cc lang=”bash”]
vi /usr/local/cloudfs/conf/cloudfs.conf
[/cc]
需要配置的项目有： HOST 、ID 、KEY 、BUCKET 等 4 项必须；若干可选项。
测试 [cc lang=”bash”]
# Start cloudfs
service cloudfs start
service cloudfs status
# 目录和文件测试，在 OSS 控制台会看到相应变化
mkdir /mnt/oss/test
touch /mnt/oss/test/test.txt
[/cc]
迁移和设置媒体库 [cc lang=”bash”]
# 设置 WordPress 媒体库位置
cd /mnt/oss</description>
    </item>
    
    <item>
      <title>如何连接阿里云数据库RDS</title>
      <link>/post/2015/08/21/2015-08-21-connect-to-rds/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/08/21/2015-08-21-connect-to-rds/</guid>
      <description>mysql客户端方式 用户安装MySQL客户端后，可进入命令行方式链接数据库。
命令格式：mysql -u user_name -h example.mysql.rds.aliyuncs.com -P3306 -pxxxx
其中，-u 指定的是用户名， -h指定的是主机名， -P指定的是端口， -p指定的是密码。
WordPress使用RDS 添加服务器IP到白名单
修改wp-config.php
参见WordPress迁移</description>
    </item>
    
    <item>
      <title>将 WordPress 迁移到 阿里云</title>
      <link>/post/2015/08/21/2015-08-21-wordpress-cloud/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/08/21/2015-08-21-wordpress-cloud/</guid>
      <description>最近将国外的主机迁移到了阿里云（参见：Site Changelog）。没办法，GFW太厉害了。留在外面只能做僵尸网站。
本文简要介绍了将WordPress迁移到云服务器ECS、云数据库RDS，域名绑定到云解析的方法。
如果要购买 ECS 云服务器，使用我的邀请码（U6FOVY，有效期截止 2015-11-30）可以得到 九折 优惠。
新服务器 安装LAMP：Ubuntu快速安装 LAMP
安装phpmyadmin：
[cc lang=”bash”]
sudo apt-get install phpmyadmin
ln -s /usr/share/phpmyadmin/ /var/www/html/phpmyadmin
[/cc]
旧服务器 WordPress整站打包下载。
使用一个插件生成数据库备份wp-DB-backup：wp_backup.sql.gz
迁移 上传整站到/var/www/html，只需要修改wp-config.php更新数据库信息。
打开http://newsite.com/phpmyadmin，创建一个数据库，将wp_backup.sql.gz 导入（import）。
进入options工作表，更新home和siteurl的值。
[cc lang=”mysql”]
mysql&amp;gt; use wordpress;
mysql&amp;gt; source wp.sql;
mysql&amp;gt; update `wp1_options` set `option_value` = “http://bio-spring.top/” where `option_name` = “siteurl”;
mysql&amp;gt; update `wp1_options` set `option_value` = “http://bio-spring.top/” where `option_name` = “home”;
[/cc]
使用云数据库 RDS 在RDS控制面板创建database，然后登录到RDS，同上设置。
[cc lang=”bash”]
bash$ mysql -uuser -ppasswd -husername.</description>
    </item>
    
  </channel>
</rss>
