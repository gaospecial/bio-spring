<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>perl on Hugo Prose</title>
    <link>/tags/perl/</link>
    <description>Recent content in perl on Hugo Prose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="/tags/perl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Genbank to BED converter</title>
      <link>/post/2015/10/14/2015-10-14-a-genbank-to-bed-converter/</link>
      <pubDate>Wed, 14 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/10/14/2015-10-14-a-genbank-to-bed-converter/</guid>
      <description>Like the previous Genbank -&amp;gt; GTF converter, this script is also depended on BioPerl, so you need firstly get the module installed in your system (Install BioPerl). To check whether BioPerl is ready, just refer to this post: bio-spring.top/check-bioperl/ .
SYNOPSIS gb2bed.pl [options] filename
Options:
&amp;ndash;help -h display this message
&amp;ndash;input -i NCBI GenBank file
&amp;ndash;out -o filename of bed output. [STDOUT]
&amp;ndash;filter -f GenBank primary tag that will be filtered, may be set to &amp;lsquo;gene&amp;rsquo;, &amp;lsquo;CDS&amp;rsquo;, &amp;lsquo;rRNA&amp;rsquo;, etc.</description>
    </item>
    
    <item>
      <title>Fix “getopts.pl can not be located in @INC” error in SSPACE_Standard_v3.0.pl</title>
      <link>/post/2015/08/16/2015-08-16-sspace-getopts-error/</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/08/16/2015-08-16-sspace-getopts-error/</guid>
      <description>SSPACE是一个常用的Scaffolding软件.当你有新的测序数据时,你可以使用SSPACE将原有的contigs延长,scaffolding等.
在Ubuntu 14.04系统中运行该软件v3.0会出现错误.谷歌也没有发现好的解决方法,最终通过研究源代码,发现这是一个简单的问题,修订源代码之后,终于能够成功运行.
两处修订如下:
[cc lang=”perl”]
#~ require “getopts.pl”;
use Getopt::Std;
[/cc]
[cc lang=”perl”]
#~ &amp;amp;Getopts(‘m:o:v:p:k:a:z:s:b:n:l:x:T:g:r:S:’);
getopt(‘m:o:v:p:k:a:z:s:b:n:l:x:T:g:r:S:’);
[/cc]</description>
    </item>
    
    <item>
      <title>修复Bio::Tree::Draw::Cladogram 输出EPS BoundingBox错误的问题</title>
      <link>/post/2013/12/25/2013-12-25-fix-eps-boundingbox-error/</link>
      <pubDate>Wed, 25 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/post/2013/12/25/2013-12-25-fix-eps-boundingbox-error/</guid>
      <description>使用Bio::Tree::Draw::Cladogram 输出的 EPS 文档在很多 EPS 查看软件（如Windows下面的ACDsee，gsView等）中不能打开，经查是由于 BoundingBox 出现浮点数所致，具体设计的代码为 Cladogram.pm 的 new 方法和 print 方法，简便起见，可以在原先的 443 行代码前面添加两行代码，以解决该问题。
如下所示 ：
[perl]
print $INFO “%!PS-Adobe-\n”;
$width = int($width + 1); # BoundingBox should be int
$height = int($height +1);
print $INFO “%%BoundingBox: 0 0 “, $width, ” “, $height, “\n”;
print $INFO “1 setlinewidth\n”;
print $INFO “/$font findfont\n”;
print $INFO “$size scalefont\n”;
print $INFO “setfont\n”;
[/perl]
经测试，修改此处后，生成的　ＥＰＳ　文档不会再由于该错误无法打开和查看。</description>
    </item>
    
    <item>
      <title>使用正则表达式匹配DOI</title>
      <link>/post/2012/03/10/2012-03-10-using-regex-match-doi/</link>
      <pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/2012/03/10/2012-03-10-using-regex-match-doi/</guid>
      <description>先看几个DOI的例子：
10.1093/nar/gkh458 10.1146/annurev.micro.112408.134233 10.1183/09031936.02.00400202 可以看出，DOI的编码以“10”开始，可以含有数字]0-9]，小数点，斜杠等分隔，但是其中不会出现空格。鉴于此，在perl中使用以下正则表达式匹配：
[cc lang=”perl”]
$str1 =~ /10\.[^\s\/]+\/[^\s]+/; # borrowed from Zotero
$str2 =~ /\b(10\.\d+\/[^\s]+)\b/; # another one
[/cc]</description>
    </item>
    
    <item>
      <title>Perl中的split函数和join函数：不同的参数书写样式</title>
      <link>/post/2011/03/13/2011-03-13-perl-split-join/</link>
      <pubDate>Sun, 13 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>/post/2011/03/13/2011-03-13-perl-split-join/</guid>
      <description>这两个函数其实是一对孪生函数，它们的作用是恰恰相反的。而我，就一直以为这两个函数的用法相同，其实它们是有很大的不同的。
split的用法
split /PATTERN/,EXPR
[perl]split(/(?=\w)/, ‘hi there!’);[/perl]
join的用法
join EXPR,LIST
[perl]$rec = join(‘:’, $login,$passwd,$uid,$gid,$gcos,$home,$shell);[/perl]
呵呵，搞不懂我想说什么。其实只是我在使用join函数的时候，用//把第一个参数圈起来了。
你有没有犯过这种错误。</description>
    </item>
    
    <item>
      <title>Perl LWP：从“国家地理每日图片”到“Cell最近一期的封面”</title>
      <link>/post/2010/12/08/2010-12-08-perl-lwp-image-fetch/</link>
      <pubDate>Wed, 08 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/2010/12/08/2010-12-08-perl-lwp-image-fetch/</guid>
      <description>在网上看到了一个从国家地理杂志网站下载每日图片的Perl程序。因为网站改版，脚本已经不能正常运行，经过修改后，经测试可以将每日图片下载到当前目录，代码如下：
#!/usr/bin/perl # author: # Seraphxby # Purpose: # 查看国家地理每日图片的Perl脚本 # history: # v0.1 first draft # 2010-12-8 modified by gaospecial use warnings; use strict; use LWP::Simple; my $url=&#39;http://photography.nationalgeographic.com/photography/photo-of-the-day&#39;; my $content = get( &amp;quot;$url&amp;quot; ) || die &amp;quot;get the page failed!\n&amp;quot;; my $img; if ($content =~ m/(.*?&amp;lt;\/a&amp;gt;)/s) { $content = $1; if($content =~ m/&amp;lt;img.*?src=&amp;quot;([^\t]*?)&amp;quot;/){ # 非贪婪的数量词 *?,匹配中不含有跳格\t $img = $1; if($img =~ m/^(.*?)([^\/]+$)/){ $url = $1; $img = $2; getstore($url.$img,$img) || die &amp;quot;get img failed!</description>
    </item>
    
  </channel>
</rss>
